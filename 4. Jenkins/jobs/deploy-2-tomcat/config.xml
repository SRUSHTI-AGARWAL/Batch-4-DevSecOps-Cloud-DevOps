<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1436.vfa_244484591f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2214.vb_b_34b_2ea_9b_83"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2214.vb_b_34b_2ea_9b_83">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>2</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
        <removeLastBuild>false</removeLastBuild>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3969.vdc9d3a_efcc6a_">
    <script>pipeline {
    agent any

    stages {
        stage(&apos;Git Checkout&apos;) {
            steps {
                git branch: &apos;main&apos;, url: &apos;https://github.com/jaiswaladi2468/TC.git&apos;
            }
        }
        stage(&apos;Compile&apos;) {
            steps {
                sh &quot;mvn compile&quot;
            }
        }
        stage(&apos;Run Tests&apos;) {
            steps {
                sh &quot;mvn test&quot;
            }
        }
        stage(&apos;Package&apos;) {
            steps {
                sh &quot;mvn package&quot;
            }
        }
        
        stage(&apos;Deploy to tomcat&apos;) {
            steps {
                deploy adapters: [tomcat9(credentialsId: &apos;tomcat-cred&apos;, path: &apos;&apos;, url: &apos;http://localhost:8082/&apos;)], contextPath: &apos;Planview&apos;, onFailure: false, war: &apos;target/*.war&apos;
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>